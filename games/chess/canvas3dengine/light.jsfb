/*
 * javascript/canvas textured 3d renderer v0.3
 * copyright (c) 2008 jacob seidelin, cupboy@gmail.com
 * this software is free to use for non-commercial purposes. for anything else, please contact the author.
 * this is a version modified by stefano gioffre'.
 */

var __ilightidcounter = 0;

canvas3d.light = function() {
	this._oposition = new canvas3d.vec3(0,0,0);
	this._ocolor = {r:255,g:255,b:255};
	this._fintensity = 1.0;

	this._ilightid = ++__ilightidcounter;
};

var proto = canvas3d.light.prototype;
	
proto.setposition = function(opos) {
	this._oposition = opos;
	this._bdirty = true;
}

proto.getposition = function() {
	return this._oposition;
}

proto.setcolor = function(ocolor) {
	this._ocolor = ocolor;
	this._bdirty = true;
}

proto.getcolor = function() {
	return this._ocolor;
}

proto.setintensity = function(fintensity) {
	this._fintensity = fintensity;
	this._bdirty = true;
}

proto.getintensity = function(fintensity) {
	return this._fintensity;
}

proto.setscene = function(oscene) {
	if (this._oscene != oscene) {
		this._oscene = oscene;
		this._bdirty = true;
	}
}

proto.draw = function(ocontext, ioffsetx, ioffsety) {
	var oscene = this._oscene;
	var ocam = oscene.getactivecamera();

	var opos2d = ocam.transform2d(ocam.transformpoint(this._oposition));

	var iradius = 3;

	ocontext.beginpath();
	ocontext.moveto(opos2d.x + ioffsetx + iradius, opos2d.y + ioffsety);
	ocontext.arc(opos2d.x + ioffsetx, opos2d.y + ioffsety, iradius, 0, 360, false);
	ocontext.fillstyle = "rgb(255,255,0)";
	ocontext.fill();
}

proto.getdirty = function() {
	return this._bdirty;
}

proto.setdirty = function(bdirty) {
	this._bdirty = bdirty;
}
